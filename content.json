{"pages":[],"posts":[{"title":"Autodesk Webinar 听后感","text":"昨天凌晨2:00起来听了一个自动桌子公司的Webinar，主题是： Power up! AECOM Digitizes Construction in Civil Infrastructure 主讲人是AECOM在中东的Digital Project Delivery的一个负责人。Webinar一开始，主讲人讲了很多关于Technological Innovation和AECOM的业务Workflow之间的关系。当然这个并不是我关心的内容，关于这个Webinar我比较关注的是AECOM这样的公司在场地管理中用到了怎样的所谓Technological Innovation. 主讲人提到的Data Capture and Analysis这部分内容是我最关心的内容。不出所料,他们公司这方面主要还是使用Drone和UAS搭载的360 Camera和LIDAR。另外管理数据主要是采用Autodesk的Recap软件。以此实现场地监控 之后介绍了一个例子：利用采集的图像数据监控场地上的材料数目 之后的内容基本上和我探究的方向没什么关系了，总结一下的话这个Webinar基本上没啥我用得着的内容，他对于这些数据获取和分析的介绍都是从一个用户的角度来出发的，并没有去深入地介绍其使用了什么算法，只是介绍了其在应用阶段给工程管理带来的好处云云。具体我所关心的内容，还是去读文献比较靠谱一些。","link":"/Autodesk-Webinar-note/"},{"title":"谷歌Colab使用心得","text":"最近一直在折腾毕业论文，终于可以抽一点时间写点笔记，鉴于我的记性向来很差，这还是相当有必要的，免得以后再做的时候把现在走过的弯路全走一遍。之前做图像分类很多经验就没总结，到最后全重新踩坑了。废话少说，开始说正事。 谷歌的Colab基本上就是一个深度魔改的Jupyter Notebook，但是谷歌非常良心地提供了Python的运行时，因此我们就可以直接在云端运行任何.ipynb格式的笔记了，最为让人感动的是，谷歌还提供免费的GPU资源用，拯救了我毕业论文的算力危机。当然，要是有台正经的工作站就没这么麻烦了。 首先，Colab可以使用IPython的magic command，例如%matplotlib等，但是Colab里有一部分特有的magic command，例如指定tensorflow版本的命令%tensorflow_version 1.x，由于tensorflow的object detection API还没有适配TF2.0版本，但是现在的Colab已经是默认使用TF2.0了，因此必须要在import之前就指定TF版本，否则指定完以后需要重启运行时。 同样的，很多时候我们还需要运行一些shell command，比如需要装一些缺失的包，git clone之类，可以用![shell command]，例如!pip3 install pycocotools即可。 接下来，不可避免地我们会遇到一些需要进行I/O操作的场景。直接在Colab提供的运行时中储存重要的数据是很不推荐的行为。试想训练了好久的模型，吃着火锅儿，唱着歌，突然就被谷歌把资源收回了，哭都没处哭。因此我采用的办法是用Google Drive的API，直接mount云端硬盘，这样各种操作都比较方便，而不需要次次去和云端硬盘的API打交道。使用也很简单，按照文档授权后填token即可，美中不足的就是每次mount都要填token，不过无伤大雅。需要注意的是，mount后云端硬盘的文件夹名会叫My Drive，中间的空格在各种路径中需要转义成My\\ Drive。 另外，如果要使用GPU，需要申请有GPU的运行时，在“修改-笔记本设置”里可以进行修改。需要注意GPU资源还是比较宝贵的，出于不被限额和遵守道德的原因，在编辑、调试笔记的时候不要用占用GPU运行时，等一切就绪再申请。同样即使是无GPU的运行时，也不要长久占用。 最后，也是最重要的————多看文档。刚开始没看文档，以为GPU资源不需要自己申请，结果拿CPU跑了训练，占用时间极长不说，还被暂时限制使用了，因此看文档真的很重要。 目前就这些比较重要的体会了，如果在之后有新的需要记录的内容，还会继续更新这篇博文。","link":"/Colab-Review/"}],"tags":[{"name":"研究笔记","slug":"研究笔记","link":"/tags/%E7%A0%94%E7%A9%B6%E7%AC%94%E8%AE%B0/"}],"categories":[]}